
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var ConnectionState = require('../ConnectionState');

var _require = require('../notification');

var notifyLocalDiskFile = _require.notifyLocalDiskFile;
var notifyConnectedRemoteFile = _require.notifyConnectedRemoteFile;
var notifyDisconnectedRemoteFile = _require.notifyDisconnectedRemoteFile;

var React = require('react-for-atom');
var PropTypes = React.PropTypes;

var StatusBarTile = React.createClass({
  displayName: 'StatusBarTile',

  propTypes: {
    connectionState: PropTypes.number.isRequired,
    fileUri: PropTypes.string
  },

  render: function render() {
    var iconName = null;
    switch (this.props.connectionState) {
      case ConnectionState.NONE:
        break;
      case ConnectionState.LOCAL:
        iconName = 'device-desktop';
        break;
      case ConnectionState.CONNECTED:
        iconName = 'cloud-upload';
        break;
      case ConnectionState.DISCONNECTED:
        iconName = 'alert';
        break;
    }
    // When the active pane isn't a text editor, e.g. diff view, preferences, ..etc.,
    // We don't show a connection status bar.
    if (!iconName) {
      return null;
    }
    return React.createElement('span', {
      className: 'icon icon-' + iconName + ' nuclide-remote-projects-status-icon',
      onClick: this.onStatusBarTileClicked
    });
  },

  onStatusBarTileClicked: function onStatusBarTileClicked() {
    switch (this.props.connectionState) {
      case ConnectionState.LOCAL:
        notifyLocalDiskFile(this.props.fileUri);
        break;
      case ConnectionState.CONNECTED:
        notifyConnectedRemoteFile(this.props.fileUri);
        break;
      case ConnectionState.DISCONNECTED:
        notifyDisconnectedRemoteFile(this.props.fileUri);
        break;
    }
  }
});

module.exports = StatusBarTile;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy94Zi9yc3BoNF9jNTczMTVyczU3eHhzZHNrcnhudjM2dDAvVC90bXBwZmw1Mm5wdWJsaXNoX3BhY2thZ2VzL2FwbS9udWNsaWRlLXJlbW90ZS1wcm9qZWN0cy9saWIvdWkvU3RhdHVzQmFyVGlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLENBQUM7Ozs7Ozs7Ozs7QUFXWixJQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQzs7ZUFLbEQsT0FBTyxDQUFDLGlCQUFpQixDQUFDOztJQUg1QixtQkFBbUIsWUFBbkIsbUJBQW1CO0lBQ25CLHlCQUF5QixZQUF6Qix5QkFBeUI7SUFDekIsNEJBQTRCLFlBQTVCLDRCQUE0Qjs7QUFFOUIsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDakMsU0FBUyxHQUFJLEtBQUssQ0FBbEIsU0FBUzs7QUFFaEIsSUFBTSxhQUFhLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQzs7O0FBQ3RDLFdBQVMsRUFBRTtBQUNULG1CQUFlLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVO0FBQzVDLFdBQU8sRUFBRSxTQUFTLENBQUMsTUFBTTtHQUMxQjs7QUFFRCxRQUFNLEVBQUEsa0JBQWtCO0FBQ3RCLFFBQUksUUFBUSxHQUFHLElBQUksQ0FBQztBQUNwQixZQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZTtBQUNoQyxXQUFLLGVBQWUsQ0FBQyxJQUFJO0FBQ3ZCLGNBQU07QUFBQSxBQUNSLFdBQUssZUFBZSxDQUFDLEtBQUs7QUFDeEIsZ0JBQVEsR0FBRyxnQkFBZ0IsQ0FBQztBQUM1QixjQUFNO0FBQUEsQUFDUixXQUFLLGVBQWUsQ0FBQyxTQUFTO0FBQzVCLGdCQUFRLEdBQUcsY0FBYyxDQUFDO0FBQzFCLGNBQU07QUFBQSxBQUNSLFdBQUssZUFBZSxDQUFDLFlBQVk7QUFDL0IsZ0JBQVEsR0FBRyxPQUFPLENBQUM7QUFDbkIsY0FBTTtBQUFBLEtBQ1Q7OztBQUdELFFBQUksQ0FBQyxRQUFRLEVBQUU7QUFDYixhQUFPLElBQUksQ0FBQztLQUNiO0FBQ0QsV0FDRTtBQUNFLGVBQVMsaUJBQWUsUUFBUSx5Q0FBdUM7QUFDdkUsYUFBTyxFQUFFLElBQUksQ0FBQyxzQkFBc0IsQUFBQztNQUNyQyxDQUNGO0dBQ0g7O0FBRUQsd0JBQXNCLEVBQUEsa0NBQVM7QUFDN0IsWUFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWU7QUFDaEMsV0FBSyxlQUFlLENBQUMsS0FBSztBQUN4QiwyQkFBbUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3hDLGNBQU07QUFBQSxBQUNSLFdBQUssZUFBZSxDQUFDLFNBQVM7QUFDNUIsaUNBQXlCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM5QyxjQUFNO0FBQUEsQUFDUixXQUFLLGVBQWUsQ0FBQyxZQUFZO0FBQy9CLG9DQUE0QixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDakQsY0FBTTtBQUFBLEtBQ1Q7R0FDRjtDQUNGLENBQUMsQ0FBQzs7QUFFSCxNQUFNLENBQUMsT0FBTyxHQUFHLGFBQWEsQ0FBQyIsImZpbGUiOiIvdmFyL2ZvbGRlcnMveGYvcnNwaDRfYzU3MzE1cnM1N3h4c2Rza3J4bnYzNnQwL1QvdG1wcGZsNTJucHVibGlzaF9wYWNrYWdlcy9hcG0vbnVjbGlkZS1yZW1vdGUtcHJvamVjdHMvbGliL3VpL1N0YXR1c0JhclRpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbi8qIEBmbG93ICovXG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBDb25uZWN0aW9uU3RhdGUgPSByZXF1aXJlKCcuLi9Db25uZWN0aW9uU3RhdGUnKTtcbmNvbnN0IHtcbiAgbm90aWZ5TG9jYWxEaXNrRmlsZSxcbiAgbm90aWZ5Q29ubmVjdGVkUmVtb3RlRmlsZSxcbiAgbm90aWZ5RGlzY29ubmVjdGVkUmVtb3RlRmlsZSxcbn0gPSByZXF1aXJlKCcuLi9ub3RpZmljYXRpb24nKTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QtZm9yLWF0b20nKTtcbmNvbnN0IHtQcm9wVHlwZXN9ID0gUmVhY3Q7XG5cbmNvbnN0IFN0YXR1c0JhclRpbGUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIHByb3BUeXBlczoge1xuICAgIGNvbm5lY3Rpb25TdGF0ZTogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIGZpbGVVcmk6IFByb3BUeXBlcy5zdHJpbmcsXG4gIH0sXG5cbiAgcmVuZGVyKCk6ID9SZWFjdEVsZW1lbnQge1xuICAgIGxldCBpY29uTmFtZSA9IG51bGw7XG4gICAgc3dpdGNoICh0aGlzLnByb3BzLmNvbm5lY3Rpb25TdGF0ZSkge1xuICAgICAgY2FzZSBDb25uZWN0aW9uU3RhdGUuTk9ORTpcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIENvbm5lY3Rpb25TdGF0ZS5MT0NBTDpcbiAgICAgICAgaWNvbk5hbWUgPSAnZGV2aWNlLWRlc2t0b3AnO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgQ29ubmVjdGlvblN0YXRlLkNPTk5FQ1RFRDpcbiAgICAgICAgaWNvbk5hbWUgPSAnY2xvdWQtdXBsb2FkJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIENvbm5lY3Rpb25TdGF0ZS5ESVNDT05ORUNURUQ6XG4gICAgICAgIGljb25OYW1lID0gJ2FsZXJ0JztcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIC8vIFdoZW4gdGhlIGFjdGl2ZSBwYW5lIGlzbid0IGEgdGV4dCBlZGl0b3IsIGUuZy4gZGlmZiB2aWV3LCBwcmVmZXJlbmNlcywgLi5ldGMuLFxuICAgIC8vIFdlIGRvbid0IHNob3cgYSBjb25uZWN0aW9uIHN0YXR1cyBiYXIuXG4gICAgaWYgKCFpY29uTmFtZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8c3BhblxuICAgICAgICBjbGFzc05hbWU9e2BpY29uIGljb24tJHtpY29uTmFtZX0gbnVjbGlkZS1yZW1vdGUtcHJvamVjdHMtc3RhdHVzLWljb25gfVxuICAgICAgICBvbkNsaWNrPXt0aGlzLm9uU3RhdHVzQmFyVGlsZUNsaWNrZWR9XG4gICAgICAvPlxuICAgICk7XG4gIH0sXG5cbiAgb25TdGF0dXNCYXJUaWxlQ2xpY2tlZCgpOiB2b2lkIHtcbiAgICBzd2l0Y2ggKHRoaXMucHJvcHMuY29ubmVjdGlvblN0YXRlKSB7XG4gICAgICBjYXNlIENvbm5lY3Rpb25TdGF0ZS5MT0NBTDpcbiAgICAgICAgbm90aWZ5TG9jYWxEaXNrRmlsZSh0aGlzLnByb3BzLmZpbGVVcmkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgQ29ubmVjdGlvblN0YXRlLkNPTk5FQ1RFRDpcbiAgICAgICAgbm90aWZ5Q29ubmVjdGVkUmVtb3RlRmlsZSh0aGlzLnByb3BzLmZpbGVVcmkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgQ29ubmVjdGlvblN0YXRlLkRJU0NPTk5FQ1RFRDpcbiAgICAgICAgbm90aWZ5RGlzY29ubmVjdGVkUmVtb3RlRmlsZSh0aGlzLnByb3BzLmZpbGVVcmkpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH0sXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBTdGF0dXNCYXJUaWxlO1xuIl19
